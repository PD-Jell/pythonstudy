odd = [1, 3, 5, 7, 9] # List는 리터럴 문법으로 만들 수 있다.

a = [ ]
b = [1, 2, 3]
c = ['Life', 'is', 'too', 'short']
d = [1, 2, 'Life', 'is']
e = [1, 2, ['Life', 'is']] # 리스트 안에 리스트를 넣는 것도 가능.

#리스트의 인덱싱과 슬라이싱

a = [1, 2, 3]
print(a)

print(a[0])

print(a[0] + a[2]) # 4

print(a[-1]) # 3. 리스트의 마지막으로 감.

a = [1, 2, 3, ['a', 'b', 'c']]

print(a[0])
print(a[-1])
print(a[3])

print(a[-1][0]) # 마지막 리스트의 첫번쨰.

# 삼중 리스트
a = [1, 2, ['a', 'b', ['Life', 'is']]]

# 리스트의 슬라이싱
a = [1, 2, 3, 4, 5]
print(a[0:2]) # [1, 2]

a = [12345]
print(a[0:2])

a = [1, 2, 3, 4, 5]
b = a[:2]
c = a[2:]
print(b) # 1, 2
print(c) # 3, 4, 5

# 중첩된 리스트에서 슬라이싱하기
a = [1, 2, 3, ['a', 'b', 'c'], 4, 5]
print(a[2:5]) # [3, ['a', 'b', 'c'], 4]
print(a[3][:2]) # ['a', 'b']

# 리스트 더하기(+)
a = [1, 2, 3]
b = [4, 5, 6]
print(a + b) # [1, 2, 3, 4, 5, 6]

# 리스트 반복하기(*)
a = [1, 2, 3]
print(a * 3) # [1, 2, 3, 1, 2, 3, 1, 2, 3]

# 리스트 연산
a = [1, 2, 3]
print(str(a[2]) + "hi") # 3hi. str를 꼭 붙여야 한다.

# 리스트의 수정, 변경과 삭제
# 리스트에서 하나의 값 수정하기
a = [1, 2, 3]
a[2] = 4
print(a) # [1, 2, 4]

# 리스트에서 연속된 범위의 값 수정하기
print(a[1:2]) # [2]
a[1:2] = ['a', 'b', 'c'] # index의 1과 2사이의 리스트를 바꾼다.
print(a) # [1, 'a', 'b', 'c', 4]

# []를 사용해 리스트 요소 삭제하기
a[1:3] = []
print(a) # [1, 'c', 4]

# def 함수 사용해 리스트 요소 삭제하기
a = [1, 'c', 4]
del a[1]
print(a) # [1, 4]

# 리스트에 요소 추가하기 (append)
a = [1, 2, 3]
a.append(4)
print(a) # [1, 2, 3, 4]

a.append ([5, 6])
print(a) # [1, 2, 3, 4, [5, 6]]

# 리스트 정렬 (sort)
a = [1, 4, 3, 2]
a.sort()
print(a) # [1, 2, 3, 4] , 작은 순으로 정렬

a = ['a', 'c', 'b']
a.sort()
print(a) # ['a', 'b', 'c'] , 알파벳 순으로 정렬

# 리스트 뒤집기 (reverse)
a = ['a', 'c', 'b']
a.reverse()
print(a) # ['b', 'c', 'a'] , 거꾸로 돌림

# 위치 반환 (index)
a = [1, 2, 3]
print(a.index(3)) # 2
print(a.index(1)) # 0

# 리스트에 요소 삽입 (insert)
a = [1, 2, 3]
a.insert(0, 4) # 0번째 위치에 4를 넣겠다!
print(a) # [4, 1, 2, 3]

# 리스트 요소 제거 (remove)
a = [1, 2, 3, 1, 2, 3]
a.remove(3)
print(a) # [1, 2, 1, 2, 3] 해당하는 첫번째 항목을 지운다.

# 리스트 요소 끄집어내 (pop)
a = [1, 2, 3]
print(a.pop()) # 3, 마지막 요소를 끄집어낸다.
print(a) # [1, 2]

a = [1, 2, 3]
print(a.pop(1)) # 2, index가 1인 요소를 끄집어낸다.
print(a) # [1, 3]

a = [1, 2, 3, 1]
print(a.count(1)) # 2, 1의 개수를 보여준다.

# 리스트 확장 (extend)
a = [1, 2, 3]
a.extend([4, 5])
print(a) # [1, 2, 3, 4, 5], 행렬을 안에 넣는 것이 아닌 기존 행렬과 합친다.
b = [6, 7]
a.extend(b)
print(a) # [1, 2, 3, 4, 5, 6, 7]